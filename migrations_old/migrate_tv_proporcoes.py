#!/usr/bin/env python3
"""
Migra√ß√£o: Adicionar configura√ß√µes de propor√ß√£o nas TVs
Data: 31 de outubro de 2025
"""
import pymysql
import os
from dotenv import load_dotenv

load_dotenv()

print("üîÑ Migra√ß√£o: Configura√ß√µes de Propor√ß√£o de Exibi√ß√£o por TV")
print("=" * 70)

# Conectar ao banco
conn = pymysql.connect(
    host=os.getenv("DB_HOST"),
    user=os.getenv("DB_USER"),
    password=os.getenv("DB_PASSWORD"),
    database=os.getenv("DB_NAME"),
    port=int(os.getenv("DB_PORT", "3306"))
)

try:
    with conn.cursor() as cursor:
        print("\nüìã Adicionando colunas de configura√ß√£o...")
        
        # Verificar se as colunas j√° existem
        cursor.execute("""
            SELECT COUNT(*) 
            FROM information_schema.COLUMNS 
            WHERE TABLE_SCHEMA = %s 
            AND TABLE_NAME = 'tv' 
            AND COLUMN_NAME = 'proporcao_avisos'
        """, (os.getenv("DB_NAME"),))
        
        if cursor.fetchone()[0] > 0:
            print("‚ö†Ô∏è  Colunas j√° existem! Pulando migra√ß√£o...")
        else:
            # Adicionar coluna proporcao_avisos
            cursor.execute("""
                ALTER TABLE tv 
                ADD COLUMN proporcao_avisos INT NOT NULL DEFAULT 1
            """)
            print("‚úÖ Adicionada coluna 'proporcao_avisos' (padr√£o: 1)")
            
            # Adicionar coluna proporcao_anuncios
            cursor.execute("""
                ALTER TABLE tv 
                ADD COLUMN proporcao_anuncios INT NOT NULL DEFAULT 5
            """)
            print("‚úÖ Adicionada coluna 'proporcao_anuncios' (padr√£o: 5)")
            
            # Adicionar coluna proporcao_noticias
            cursor.execute("""
                ALTER TABLE tv 
                ADD COLUMN proporcao_noticias INT NOT NULL DEFAULT 3
            """)
            print("‚úÖ Adicionada coluna 'proporcao_noticias' (padr√£o: 3)")
            
            conn.commit()
            print("\n‚úÖ Migra√ß√£o conclu√≠da com sucesso!")
            
        # Mostrar TVs existentes
        cursor.execute("SELECT id, nome, proporcao_avisos, proporcao_anuncios, proporcao_noticias FROM tv")
        tvs = cursor.fetchall()
        
        if tvs:
            print(f"\nüì∫ TVs no sistema ({len(tvs)}):")
            print("-" * 70)
            for tv_id, nome, av, an, nt in tvs:
                print(f"  TV #{tv_id}: {nome}")
                print(f"    Propor√ß√£o: {av} aviso : {an} an√∫ncios : {nt} not√≠cias")
        else:
            print("\n‚ö†Ô∏è  Nenhuma TV cadastrada no sistema")

except Exception as e:
    print(f"\n‚ùå Erro durante migra√ß√£o: {e}")
    conn.rollback()
finally:
    conn.close()

print("\n" + "=" * 70)
print("‚úÖ Script finalizado!")
print("\nüí° Dica: Use o endpoint PUT /tvs/{id}/config para atualizar as propor√ß√µes")
